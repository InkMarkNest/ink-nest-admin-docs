import{_ as s,o as t,c as o,V as e}from"./chunks/framework.a438cccc.js";const h=JSON.parse('{"title":"开发链路","description":"","frontmatter":{},"headers":[],"relativePath":"guide/introduction/dev-process.md","filePath":"guide/introduction/dev-process.md"}'),n={name:"guide/introduction/dev-process.md"},a=e('<h1 id="开发链路" tabindex="-1">开发链路 <a class="header-anchor" href="#开发链路" aria-label="Permalink to &quot;开发链路&quot;">​</a></h1><p>在本后台项目中，如何进行开发？</p><h2 id="流程" tabindex="-1">流程 <a class="header-anchor" href="#流程" aria-label="Permalink to &quot;流程&quot;">​</a></h2><p><strong>1.确定功能</strong> 首先确定开发的功能是组件还是页面。</p><p><strong>2.数据结构</strong> 对该功能所需的数据进行规划，类型编写。 确定数据结构后，设计mockAPI。</p><p><strong>3.全局状态</strong> 如果设计功能设计多个组件共享状态。 请在src/store中设计你的全局状态模块。</p><p><strong>4.页面和组件</strong> 页面开发位于src/pages 组件开发位于src/component</p><p>文件导出 统一使用 <code>export { xxComponent }</code> 不使用默认导出 <code>export default xxComponent</code></p><p>index.ts 导出</p><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">export</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">./xxx.tsx</span><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p><strong>5.如果是页面</strong> 页面分为权限和无权限 有权限需要参考项目中带有AuthGuard组件包裹的路由，还需要在Mock的User模块用户信息接口处加入你的权限！ 无权限路由可不包裹AuthGuard组件。</p><p><strong>6.书写样式</strong> 样式统一使用TailwindCSS进行编写。 色彩统一使用Antd-Style进行配置。</p><p><strong>7.书写函数</strong> 统一使用箭头函数。</p><p><strong>8.书写注释&amp;类型</strong> 类型编写尽可能不使用any。 有条件可增加JSDoc。</p>',14),r=[a];function p(c,l,i,d,_,g){return t(),o("div",null,r)}const m=s(n,[["render",p]]);export{h as __pageData,m as default};
