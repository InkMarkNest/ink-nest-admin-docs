import{_ as a,o as e,c as t,V as r}from"./chunks/framework.a438cccc.js";const f=JSON.parse('{"title":"介绍","description":"","frontmatter":{},"headers":[],"relativePath":"guide/start/introduction.md","filePath":"guide/start/introduction.md"}'),n={name:"guide/start/introduction.md"},o=r('<h1 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h1><h2 id="为什么是通用后台" tabindex="-1">为什么是通用后台？ <a class="header-anchor" href="#为什么是通用后台" aria-label="Permalink to &quot;为什么是通用后台？&quot;">​</a></h2><p>为了之后其他的拓展应用作为基础后台进行二次开发，做出了一个后台的基础框架。 涵盖了基础功能，例如登录、路由、鉴权、权限菜单、用户、文章等模块。 通过不断的更新后台内部逻辑，实现一套符合技术标准的通用后台管理系统。</p><h2 id="react" tabindex="-1">React？ <a class="header-anchor" href="#react" aria-label="Permalink to &quot;React？&quot;">​</a></h2><p>React作为一个知名的前端框架，组件UI和Hook用来开发后台模块非常的流畅，无需使用太多的API即可搭建应用。 <a href="https://react.dev/" target="_blank" rel="noreferrer">React文档</a></p><h2 id="antd5" tabindex="-1">Antd5？ <a class="header-anchor" href="#antd5" aria-label="Permalink to &quot;Antd5？&quot;">​</a></h2><p>Antd5自带一套主题配置功能，在后台中可以快速实现主题切换，Antd5使用CSS in JS，在动态主题上更灵活，且组件的功能也非常完善。 <a href="https://ant.design/components/overview-cn/" target="_blank" rel="noreferrer">Antd5-组件</a><a href="https://ant.design/docs/react/customize-theme-cn" target="_blank" rel="noreferrer">Antd5-主题</a></p><h2 id="zustand" tabindex="-1">Zustand <a class="header-anchor" href="#zustand" aria-label="Permalink to &quot;Zustand&quot;">​</a></h2><p>全局状态管理的JS库很多，选择Zustand的原因是上手简单，配合localforage作为本地缓存方案，体验感很好。 <a href="https://docs.pmnd.rs/zustand/guides/practice-with-no-store-actions" target="_blank" rel="noreferrer">Zustand</a></p><h2 id="tailwindcss" tabindex="-1">TailwindCSS <a class="header-anchor" href="#tailwindcss" aria-label="Permalink to &quot;TailwindCSS&quot;">​</a></h2><p>避免过多的Class类名编写，选择了原子化的CSS框架，在布局和样式方面可直接通过TailwindCSS定义的类名进行样式书写，而主题和颜色则通过Antd-Style库来完成色彩定义。 <a href="https://tailwindcss.com/docs/installation" target="_blank" rel="noreferrer">TailwindCSS</a><a href="https://ant-design.github.io/antd-style" target="_blank" rel="noreferrer">antd-style</a></p><h2 id="react-router" tabindex="-1">React-Router <a class="header-anchor" href="#react-router" aria-label="Permalink to &quot;React-Router&quot;">​</a></h2><p>唯一的选择。 <a href="https://reactrouter.com/en/main" target="_blank" rel="noreferrer">React-Router</a></p><h2 id="vite" tabindex="-1">Vite <a class="header-anchor" href="#vite" aria-label="Permalink to &quot;Vite&quot;">​</a></h2><p>使用Vite开发和构建，无脑简单，能快速上手，心智负担小。 <a href="https://cn.vitejs.dev/" target="_blank" rel="noreferrer">Vite</a></p>',15),i=[o];function d(s,l,c,h,u,p){return e(),t("div",null,i)}const b=a(n,[["render",d]]);export{f as __pageData,b as default};
